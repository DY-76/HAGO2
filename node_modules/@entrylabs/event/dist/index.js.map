{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["class EntryEvent {\n    _dom;\n    _data;\n    constructor(dom) {\n        if (!dom) {\n            throw new Error('dom is undefined');\n        }\n        if (!EntryEvent.elementMap) {\n            EntryEvent.elementMap = new Map();\n        }\n        this.dom = dom;\n    }\n\n    set dom(dom) {\n        this._dom = dom;\n    }\n\n    get dom() {\n        return this._dom;\n    }\n\n    set data(data) {\n        this._data = data;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    destroy() {\n        this.off();\n        this._data = null;\n        this._dom = null;\n    }\n\n    on = (types, callback, option = false) => {\n        if (!types) {\n            return this;\n        }\n        const trimTypes = types.trim();\n        trimTypes.split(' ').forEach((type) => {\n            const eventMap = EntryEvent.elementMap.get(this.dom) || {};\n            if (eventMap[type]) {\n                eventMap[type].push(callback);\n            } else {\n                eventMap[type] = [callback];\n            }\n            EntryEvent.elementMap.set(this.dom, eventMap);\n            this.addEvent(type, callback, option);\n        });\n\n        return this;\n    };\n\n    off(types = '', callback, option = false) {\n        const trimTypes = types.trim();\n        trimTypes.split(' ').forEach((type) => {\n            const eventMap = EntryEvent.elementMap.get(this.dom) || {};\n            Object.entries(eventMap).forEach(([key, value = []]) => {\n                const filtered = value.filter((func) => {\n                    if (!callback || callback === func) {\n                        if (type === key) {\n                            this.removeEvent(type, func, option);\n                            return false;\n                        } else if (type === '') {\n                            this.removeEvent(key, func, option);\n                            return false;\n                        } else if (key.indexOf('.') > -1 && type.indexOf('.') === -1) {\n                            const [event, namespace = ''] = key.split('.');\n                            const [e, n] = this.getEventName(type);\n                            if (e === event || n === namespace) {\n                                this.removeEvent(key, func, option);\n                                return false;\n                            }\n                        }\n                    }\n                    return true;\n                });\n                if (filtered.length) {\n                    eventMap[key] = filtered;\n                } else {\n                    delete eventMap[key];\n                }\n            });\n            EntryEvent.elementMap.set(this.dom, eventMap);\n        });\n        return this;\n    }\n\n    getType(type) {\n        return type.split('.')[0];\n    }\n\n    getEventName(type) {\n        if (type.indexOf('.') > -1) {\n            return type.split('.');\n        } else {\n            return [type, type];\n        }\n    }\n\n    addEvent(type, callback, option) {\n        this.dom.addEventListener(this.getType(type), callback, option);\n    }\n\n    removeEvent(type, callback, option) {\n        this.dom.removeEventListener(this.getType(type), callback, option);\n    }\n\n    trigger(type, event = {}) {\n        if(!type) {\n            return console.warn('%cEntryEvent: %ctype argument empty', \"color: blue; font-weight: bold;\", \"\");\n        }\n        const eventMap = EntryEvent.elementMap.get(this.dom) || {};\n        Object.entries(eventMap).forEach(([key, value = []]) => {\n            let triggerFunc = false;\n            if (type === key) {\n                triggerFunc = true;\n            } else if (key.indexOf('.') > -1 && type.indexOf('.') === -1) {\n                const [event, namespace = ''] = key.split('.');\n                const [e, n] = this.getEventName(type);\n                if (e === event && n === namespace) {\n                    triggerFunc = true;\n                }\n            }\n            if(triggerFunc) {\n                value.forEach((func) => func(event));\n            }\n        });\n    }\n}\n\nexport default EntryEvent;\n"],"names":["dom","types","callback","option","trim","split","forEach","type","eventMap","EntryEvent","elementMap","get","_this","push","set","addEvent","Error","Map","off","_data","_dom","_this2","Object","entries","key","filtered","filter","func","removeEvent","indexOf","event","namespace","getEventName","e","n","length","this","addEventListener","getType","removeEventListener","console","warn","value","triggerFunc","_this3","data"],"mappings":"qtBAGgBA,+KAgCP,SAACC,EAAOC,OAAUC,iEACdF,GAGaA,EAAMG,OACdC,MAAM,KAAKC,QAAQ,SAACC,OACpBC,EAAWC,EAAWC,WAAWC,IAAIC,EAAKZ,MAAQ,GACpDQ,EAASD,GACTC,EAASD,GAAMM,KAAKX,GAEpBM,EAASD,GAAQ,CAACL,GAEtBO,EAAWC,WAAWI,IAAIF,EAAKZ,IAAKQ,GACpCI,EAAKG,SAASR,EAAML,EAAUC,KAG3BS,GAdIA,KAjCNZ,QACK,IAAIgB,MAAM,oBAEfP,EAAWC,aACZD,EAAWC,WAAa,IAAIO,UAE3BjB,IAAMA,gEAoBNkB,WACAC,MAAQ,UACRC,KAAO,8CAsBZnB,yDAAQ,GAAIC,yCAAUC,iEACJF,EAAMG,OACdC,MAAM,KAAKC,QAAQ,SAACC,OACpBC,EAAWC,EAAWC,WAAWC,IAAIU,EAAKrB,MAAQ,GACxDsB,OAAOC,QAAQf,GAAUF,QAAQ,yBAAEkB,cACzBC,cADsC,MACrBC,OAAO,SAACC,OACtBzB,GAAYA,IAAayB,EAAM,IAC5BpB,IAASiB,SACTH,EAAKO,YAAYrB,EAAMoB,EAAMxB,IACtB,EACJ,GAAa,KAATI,SACPc,EAAKO,YAAYJ,EAAKG,EAAMxB,IACrB,EACJ,GAAIqB,EAAIK,QAAQ,MAAQ,IAA4B,IAAvBtB,EAAKsB,QAAQ,KAAa,SAC1BL,EAAInB,MAAM,QAAnCyB,cAAOC,aAAY,SACXV,EAAKW,aAAazB,MAA1B0B,OAAGC,UACND,IAAMH,GAASI,IAAMH,SACrBV,EAAKO,YAAYJ,EAAKG,EAAMxB,IACrB,UAIZ,IAEPsB,EAASU,OACT3B,EAASgB,GAAOC,SAETjB,EAASgB,KAGxBf,EAAWC,WAAWI,IAAIO,EAAKrB,IAAKQ,KAEjC4B,qCAGH7B,UACGA,EAAKF,MAAM,KAAK,wCAGdE,UACLA,EAAKsB,QAAQ,MAAQ,EACdtB,EAAKF,MAAM,KAEX,CAACE,EAAMA,oCAIbA,EAAML,EAAUC,QAChBH,IAAIqC,iBAAiBD,KAAKE,QAAQ/B,GAAOL,EAAUC,uCAGhDI,EAAML,EAAUC,QACnBH,IAAIuC,oBAAoBH,KAAKE,QAAQ/B,GAAOL,EAAUC,mCAGvDI,cAAMuB,yDAAQ,OACdvB,SACOiC,QAAQC,KAAK,sCAAuC,kCAAmC,QAE5FjC,EAAWC,EAAWC,WAAWC,IAAIyB,KAAKpC,MAAQ,GACxDsB,OAAOC,QAAQf,GAAUF,QAAQ,yBAAEkB,cAAKkB,aAAQ,KACxCC,GAAc,KACdpC,IAASiB,EACTmB,GAAc,OACX,GAAInB,EAAIK,QAAQ,MAAQ,IAA4B,IAAvBtB,EAAKsB,QAAQ,KAAa,SAC1BL,EAAInB,MAAM,QAAnCyB,cAAOC,aAAY,SACXa,EAAKZ,aAAazB,MAA1B0B,OAAGC,OACND,IAAMH,GAASI,IAAMH,IACrBY,GAAc,GAGnBA,GACCD,EAAMpC,QAAQ,SAACqB,UAASA,EAAKG,iCAjHjC9B,QACCoB,KAAOpB,yBAILoC,KAAKhB,gCAGPyB,QACA1B,MAAQ0B,yBAINT,KAAKjB"}